test_cases = [
    # Basic operations
    ("5+2", eval("5+2")),
    ("10-3", eval("10-3")),
    ("4*3", eval("4*3")),
    ("144/12", eval("144/12")),

    # Order of operations
    ("5+2*3", eval("5+2*3")),
    ("12-4/2", eval("12-4/2")),
    ("6*3+2", eval("6*3+2")),
    ("8+6/3*2", eval("8+6/3*2")),
    ("10-2*3+4/2", eval("10-2*3+4/2")),

    # Parentheses
    ("(5+2)*3", eval("(5+2)*3")),
    ("12/(2+4)", eval("12/(2+4)")),
    ("(6+3)*2", eval("(6+3)*2")),
    ("(5*(2+3))", eval("(5*(2+3))")),
    ("(8/(4-2))+6", eval("(8/(4-2))+6")),

    # Nested parentheses
    ("((5+3)*2)-4", eval("((5+3)*2)-4")),
    ("((12-4)/2)+5", eval("((12-4)/2)+5")),
    ("(6*(2+3))-8", eval("(6*(2+3))-8")),
    ("(((2+3)*4)-((6/3)+2))", eval("(((2+3)*4)-((6/3)+2))")),
    ("((2+(3*(4-(5/5))))+6)", eval("((2+(3*(4-(5/5))))+6)")),

    # Complex expressions
    ("5+2*3-4/2", eval("5+2*3-4/2")),
    ("(12/4)+(3*2)", eval("(12/4)+(3*2)")),
    ("8*2-3+6/2", eval("8*2-3+6/2")),
    ("((2+3)*(4-1))/5", eval("((2+3)*(4-1))/5")),
    ("(6+2*(3+1))-5", eval("(6+2*(3+1))-5")),
    ("((12/4)+3)*(2-1)", eval("((12/4)+3)*(2-1)")),
    ("(3+(2*(5+(6/3))))", eval("(3+(2*(5+(6/3))))")),
    ("(5+((2+3)*(4+(2*(1+1)))))", eval("(5+((2+3)*(4+(2*(1+1)))))")),

    # Implicit multiplication
    ("2(3+4)", eval("2*(3+4)")),
    ("(5+1)(2+3)", eval("(5+1)*(2+3)")),
    ("(12-4)(3+1)/2", eval("(12-4)*(3+1)/2")),
    ("2(3+(4*2))", eval("2*(3+(4*2))")),
    ("(1+2)(3+(4*2))", eval("(1+2)*(3+(4*2))")),
    ("((2+3)*(4+1))/((1+1))", eval("((2+3)*(4+1))/((1+1))")),
    ("((2+3)*(4+5)-6)/((1+2)*2)", eval("((2+3)*(4+5)-6)/((1+2)*2)")),
    ("((12/(2+1))+3)*(5-2)", eval("((12/(2+1))+3)*(5-2)")),
    ("((6+2*3)-(4/2))*(2+1)", eval("((6+2*3)-(4/2))*(2+1)")),
    ("((12+3*(4+5)-6/(2+1))*(2+(3%(4-(1+2))))) / ((100/(5+5))*(2+(6-3))-(8/2)) + (7*(3+(2*(5+(6/2)))))",
     eval("((12+3*(4+5)-6/(2+1))*(2+(3%(4-(1+2))))) / ((100/(5+5))*(2+(6-3))-(8/2)) + (7*(3+(2*(5+(6/2)))))")),

    # Edge cases for implicit multiplication
    ("3(2)", eval("3*2")),
    ("(4)(5)", eval("4*5")),
    ("2(3)(4)", eval("2*3*4")),
    ("(2+3)(4+5)(6)", eval("(2+3)*(4+5)*6")),
    ("5(2+3)4", eval("5*(2+3)*4")),
    ("(1+1)2(3+3)", eval("(1+1)*2*(3+3)")),
    ("(2)(3)(4)(5)", eval("2*3*4*5")),
    ("(1+2)(3+4)(5+6)", eval("(1+2)*(3+4)*(5+6)")),

    # Negative numbers
    ("5+-3", eval("5+-3")),
    ("5*-3", eval("5*-3")),
    ("(-5)+3", eval("(-5)+3")),
    ("-5+3", eval("-5+3")),
    ("-5*-3", eval("-5*-3")),
    ("10/-2", eval("10/-2")),
    ("(-5)(-3)", eval("(-5)*(-3)")),
    ("-2(3+4)", eval("-2*(3+4)")),
    ("(-2)(3+4)", eval("(-2)*(3+4)")),

    # Multiple digits
    ("12(34+56)", eval("12*(34+56)")),
    ("(100+200)(300)", eval("(100+200)*300")),
    ("(12+34)(56+78)(9)", eval("(12+34)*(56+78)*9")),

    # Division edge cases
    ("10%2(5)", eval("10%2*5")),
    ("(10)/(2)(5)", eval("(10)/(2)*5")),
    ("(100%30)(2+3)", eval("(100%30)*(2+3)")),

    # Power operator (^)
    ("2^3", eval("2**3")),
    ("5^2", eval("5**2")),
    ("9^0.5", eval("9**0.5")),
    ("2^(3^2)", eval("2**(3**2)")),
    ("(2^3)^2", eval("(2**3)**2")),
    ("10^-2", eval("10**-2")),
    ("(-2)^3", eval("(-2)**3")),
    ("(-2)^2", eval("(-2)**2")),
    ("(3+2)^2", eval("(3+2)**2")),
    ("(2+3)^(1+1)", eval("(2+3)**(1+1)")),
    ("(2^3)(3^2)", eval("(2**3)*(3**2)")),
    ("2^(1+2(3))", eval("2**(1+2*(3))")),
    ("(2(3))^2", eval("(2*(3))**2")),
    ("(2+3)^((2+1)*2)", eval("(2+3)**((2+1)*2)")),

    # Power + Mod + Mixed operations
    ("5^3%10", eval("(5**3)%10")),
    ("(2^3)+(4%3)", eval("(2**3)+(4%3)")),
    ("(3^3)-(4*2)+5", eval("(3**3)-(4*2)+5")),
    ("(2^3)*(3^2)/(2+1)", eval("(2**3)*(3**2)/(2+1)")),
    ("((2^3)+5)*(3^(2+1))", eval("((2**3)+5)*(3**(2+1))")),
    ("(2^3^2)%5", eval("(2**(3**2))%5")),
    ("(10%3)^(2+1)", eval("((10%3)**(2+1))")),
    ("((5^2)+3)%(2+2)", eval("((5**2)+3)%(2+2)")),

    # Extreme nested power
    ("2^(2^(2^(2)))", eval("2**(2**(2**(2)))")),   # 2^(2^(4)) = 2^16 = 65536
    ("((2^2)^2)^2", eval("((2**2)**2)**2")),
    
    ("9^0.5", eval("9**0.5")),
    ("2.5*4", eval("2.5*4")),
    ("5.5+4.5", eval("5.5+4.5")),
    ("(2.5+3.5)*2", eval("(2.5+3.5)*2")),
    ("2^(1+1.5)", eval("2**(1+1.5)")),
    ("10/(2.5)", eval("10/(2.5)")),
    ("2.5^3", eval("2.5**3")),
    ("((3.2+1.8)*2)^0.5", eval("((3.2+1.8)*2)**0.5")),

    # Level 2 – Deep Nesting and Mixed Operations
    ("((2+3)*(4+5))^2", eval("((2+3)*(4+5))**2")),
    ("(2+(3*(4+(5*(6+7)))))", eval("(2+(3*(4+(5*(6+7)))))")),
    ("((2^3)*(4+(5*6)))", eval("((2**3)*(4+(5*6)))")),
    ("((10/(5-3))+((2^3)*4))", eval("((10/(5-3))+((2**3)*4))")),
    ("((2+(3*4))^2)%10", eval("((2+(3*4))**2)%10")),
    ("(((2+3)*4)-(5*(6-2)))/(3+1)", eval("(((2+3)*4)-(5*(6-2)))/(3+1)")),
    ("((2+3)^2*(4-1))/(5%3)", eval("((2+3)**2*(4-1))/(5%3)")),

    # Level 3 – Implicit Multiplication
    ("2(3)(4)", eval("2*3*4")),
    ("(2+3)(4+5)", eval("(2+3)*(4+5)")),
    ("3(2+4)(5)", eval("3*(2+4)*5")),
    ("(1+2)(3+4)(5+6)", eval("(1+2)*(3+4)*(5+6)")),
    ("2(3+(4*2))(5+(1+1))", eval("2*(3+(4*2))*(5+(1+1))")),
    ("((2+3)(4))(5+2)", eval("((2+3)*(4))*(5+2)")),
    ("(2+3)4(5)", eval("(2+3)*4*5")),
    ("2(3.5)(2+2.5)", eval("2*3.5*(2+2.5)")),

    # Level 4 – Unary Minus and Power
    ("-5+3", eval("-5+3")),
    ("(-5)+(-3)", eval("(-5)+(-3)")),
    ("(-5)*(-3)", eval("(-5)*(-3)")),
    ("-(2+3)", eval("-(2+3)")),
    ("(-2)^3", eval("(-2)**3")),
    ("(-2)^2", eval("(-2)**2")),
    ("((-2)^3)^2", eval("((-2)**3)**2")),
    ("2^-2", eval("2**-2")),
    ("4^(-0.5)", eval("4**(-0.5)")),

    # Level 5 – Complex Mixed Operators
    ("5+2*3-4/2+6%4", eval("5+2*3-4/2+6%4")),
    ("10*(2+3^2)-5/(1+1)", eval("10*(2+3**2)-5/(1+1)")),
    ("((3+5)*(2^3))/4", eval("((3+5)*(2**3))/4")),
    ("(12/(2+1))+(3*(2^3))-(10%3)", eval("(12/(2+1))+(3*(2**3))-(10%3)")),
    ("((2^3^2)%5)+((4+6)/2)", eval("((2**3**2)%5)+((4+6)/2)")),
    ("((2+(3*(4^2)))/5)^2", eval("((2+(3*(4**2)))/5)**2")),
    ("(2^3)^2", eval("(2**3)**2")),
    ("2^(3^2)", eval("2**(3**2)")),

    # Level 6 – Extreme Nested Combined Cases
    ("(((12+3*(4+5)-6/(2+1))*(2+(3%(4-(1+2))))) / ((100/(5+5))*(2+(6-3))-(8/2)) + (7*(3+(2*(5+(6/2))))))",
     eval("(((12+3*(4+5)-6/(2+1))*(2+(3%(4-(1+2))))) / ((100/(5+5))*(2+(6-3))-(8/2)) + (7*(3+(2*(5+(6/2))))))")),
    ("(2.5(3.5+4.5))", eval("2.5*(3.5+4.5)")),
    ("(1.2+2.8)(3.6+4.4)", eval("(1.2+2.8)*(3.6+4.4)")),
    ("2.5^3.2", eval("2.5**3.2")),
    ("(3.2^1.5)*(2+1.5)", eval("(3.2**1.5)*(2+1.5)")),
    ("(1.5+2.5)^(2.5)", eval("(1.5+2.5)**(2.5)")),
    ("((1.1+2.2)*(3.3+4.4))/((5.5-1.1))", eval("((1.1+2.2)*(3.3+4.4))/((5.5-1.1))")),
]
